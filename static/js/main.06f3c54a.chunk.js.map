{"version":3,"sources":["App/Cover/Cover.js","App/Header/Logo/Logo.js","App/Header/TabsBar/TabsBar.js","App/Header/Header.js","App/Main/TabsContent/FirstTabContent.js","App/Main/TabsContent/FourthTabContent.js","App/Main/TabsContent/SecondTabContent.js","App/Main/TabsContent/ThirdTabContent.js","App/Main/Main.js","App/App.js","index.js"],"names":["Cover","showThisTabContent","className","Button","onClick","Logo","href","TabsBar","document","querySelector","classList","toggle","Header","FirstTabContent","addEventListener","fetch","then","data","json","characterStr","createElement","textContent","JSON","stringify","setAttribute","append","characters","parse","cardsRow","characterResults","results","key","cardItem","add","id","cardImg","image","cardName","name","cardSpecies","species","cardStatus","status","cardGender","gender","paginationRow","info","pages","page","querySelectorAll","forEach","el","remove","element","parentNode","removeChild","window","scrollTo","top","behavior","value","speciesSelect","statusSelect","genderSelect","error","console","log","message","FourthTabContent","type","Checkbox","color","SecondTabContent","episodeStr","episodes","episodesRow","episodeResults","episodeItem","episodeName","addEpisodeToList","episodeSelect","ThirdTabContent","locationStr","locations","locationsRow","locationResults","locationItem","locationName","locationType","locationDimension","dimension","nameSelect","typeSelect","dimensionSelect","Main","App","i","tabs","mobileTabs","tabContent","colors","tab","removeAttribute","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.06f3c54a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst Cover = (\r\n    {showThisTabContent}\r\n) => {\r\n    return (\r\n        <div className=\"cover-container\">\r\n            <div className=\"cover-overlay\">\r\n                <h2>get full \"RICK and MORTY\" INFO</h2>\r\n                <Button className=\"try-now-btn\" onClick={() => showThisTabContent(0)}>TRY NOW</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cover;","import React from 'react';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <a className=\"logo\" href=\"\"></a>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst TabsBar = (\r\n    {showThisTabContent}\r\n) => {\r\n\r\n    function toggleTabsBar() {\r\n        let burgerBtn = document.querySelector(\".burger\");\r\n        burgerBtn.classList.toggle(\"burger-active\");\r\n        let tabs = document.querySelector(\".tabs\");\r\n        tabs.classList.toggle(\"tabs-active\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tabs-bar\">\r\n                <div className=\"tab characters-tab\" onClick={() => showThisTabContent(0)}>Characters</div>\r\n                <div className=\"tab\" onClick={() => showThisTabContent(1)}>Episodes</div>\r\n                <div className=\"tab\" onClick={() => showThisTabContent(2)}>Locations</div>\r\n                <div className=\"tab\" onClick={() => showThisTabContent(3)}>My Watch List</div>\r\n            </div>\r\n\r\n            <div className=\"tabs-bar mobile-tabs-bar\">\r\n                <div className=\"burger\" onClick={toggleTabsBar}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"tabs\">\r\n                    <div className=\"tab mobile-tab\" onClick={() => showThisTabContent(0)}>Characters</div>\r\n                    <div className=\"tab mobile-tab\" onClick={() => showThisTabContent(1)}>Episodes</div>\r\n                    <div className=\"tab mobile-tab\" onClick={() => showThisTabContent(2)}>Locations</div>\r\n                    <div className=\"tab mobile-tab\" onClick={() => showThisTabContent(3)}>My Watch List</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TabsBar;","import React from 'react';\r\n\r\nimport Logo from './Logo/Logo';\r\nimport TabsBar from './TabsBar/TabsBar';\r\n\r\nconst Header = (\r\n    {showThisTabContent}\r\n) => {\r\n    return (\r\n        <nav className=\"header\">\r\n            <Logo/>\r\n            <TabsBar\r\n                showThisTabContent={showThisTabContent}\r\n            />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst FirstTabContent = () => {\r\n\r\n    function getCharacterApi() {\r\n        let characterUrl = \"https://rickandmortyapi.com/api/character\";\r\n        fetch(characterUrl)\r\n        .then(data => data.json())\r\n        .then(json => {\r\n            let characterStr = document.createElement(\"div\");\r\n            characterStr.textContent = JSON.stringify(json);\r\n            characterStr.setAttribute(\"style\", \"display: none\");\r\n            document.querySelector(\"body\").append(characterStr);\r\n            let characters = JSON.parse(characterStr.textContent);\r\n\r\n            let cardsRow = document.querySelector(\".cards-row\");\r\n            let characterResults = characters.results;\r\n\r\n            for (let key in characterResults) {\r\n                let cardItem = document.createElement(\"div\");\r\n                cardItem.classList.add(\"card-item\");\r\n                cardItem.setAttribute(\"key\", characterResults[key].id);\r\n\r\n                let cardImg = document.createElement(\"img\");\r\n                cardImg.classList.add(\"character-img\");\r\n                cardImg.setAttribute(\"src\", characterResults[key].image);\r\n                cardItem.append(cardImg);\r\n\r\n                let cardName = document.createElement(\"h3\");\r\n                cardName.classList.add(\"character-name\");\r\n                cardName.textContent = `Name: ${characterResults[key].name}`;\r\n                cardItem.append(cardName);\r\n\r\n                let cardSpecies = document.createElement(\"div\");\r\n                cardSpecies.classList.add(\"character-species\");\r\n                cardSpecies.textContent = `Species: ${characterResults[key].species}`;\r\n                cardItem.append(cardSpecies);\r\n\r\n                let cardStatus = document.createElement(\"div\");\r\n                cardStatus.classList.add(\"character-status\");\r\n                cardStatus.textContent = `Status: ${characterResults[key].status}`;\r\n                cardItem.append(cardStatus);\r\n\r\n                let cardGender = document.createElement(\"div\");\r\n                cardGender.classList.add(\"character-gender\");\r\n                cardGender.textContent = `Gender: ${characterResults[key].gender}`;\r\n                cardItem.append(cardGender);\r\n\r\n                cardsRow.append(cardItem);\r\n            }\r\n\r\n            // Pagination\r\n            let paginationRow = document.querySelector(\".pagination-row\");\r\n\r\n            for(let key = 1; key <= json.info.pages; key++) {\r\n                let page = document.createElement(\"div\");\r\n                page.classList.add(\"page\");\r\n                page.textContent = key;\r\n                paginationRow.append(page);\r\n            };\r\n\r\n            let pages = document.querySelectorAll(\".page\");\r\n            \r\n            pages.forEach((el) => {\r\n                el.addEventListener(\"click\", function() {\r\n                    pages.forEach(page => {\r\n                        page.classList.remove(\"page-active\");\r\n                    })\r\n                    el.classList.add(\"page-active\");\r\n\r\n                    fetch(`https://rickandmortyapi.com/api/character/?page=${el.textContent}`)\r\n                    .then(data => data.json())\r\n                    .then(json => {\r\n\r\n                        if (document.querySelector(\".card-item\")) {\r\n                            let deletableItem = document.querySelectorAll(\".card-item\");\r\n                            deletableItem.forEach(element => {\r\n                                element.parentNode.removeChild(element)\r\n                            })\r\n                        };\r\n\r\n                        let characterStr = document.createElement(\"div\");\r\n                        characterStr.textContent = JSON.stringify(json);\r\n                        characterStr.setAttribute(\"style\", \"display: none\");\r\n                        document.querySelector(\"body\").append(characterStr);\r\n                        let characters = JSON.parse(characterStr.textContent);\r\n\r\n                        let cardsRow = document.querySelector(\".cards-row\");\r\n                        let characterResults = characters.results;\r\n\r\n                        for (let key in characterResults) {\r\n                            let cardItem = document.createElement(\"div\");\r\n                            cardItem.classList.add(\"card-item\");\r\n                            cardItem.setAttribute(\"key\", characterResults[key].id);\r\n\r\n                            let cardImg = document.createElement(\"img\");\r\n                            cardImg.classList.add(\"character-img\");\r\n                            cardImg.setAttribute(\"src\", characterResults[key].image);\r\n                            cardItem.append(cardImg);\r\n\r\n                            let cardName = document.createElement(\"h3\");\r\n                            cardName.classList.add(\"character-name\");\r\n                            cardName.textContent = `Name: ${characterResults[key].name}`;\r\n                            cardItem.append(cardName);\r\n\r\n                            let cardSpecies = document.createElement(\"div\");\r\n                            cardSpecies.classList.add(\"character-species\");\r\n                            cardSpecies.textContent = `Species: ${characterResults[key].species}`;\r\n                            cardItem.append(cardSpecies);\r\n\r\n                            let cardStatus = document.createElement(\"div\");\r\n                            cardStatus.classList.add(\"character-status\");\r\n                            cardStatus.textContent = `Status: ${characterResults[key].status}`;\r\n                            cardItem.append(cardStatus);\r\n\r\n                            let cardGender = document.createElement(\"div\");\r\n                            cardGender.classList.add(\"character-gender\");\r\n                            cardGender.textContent = `Gender: ${characterResults[key].gender}`;\r\n                            cardItem.append(cardGender);\r\n\r\n                            cardsRow.append(cardItem);\r\n                        }\r\n\r\n                        window.scrollTo({\r\n                            top: 500,\r\n                            behavior: \"smooth\",\r\n                        })\r\n                    })\r\n                })\r\n            });\r\n            \r\n        });\r\n    };\r\n\r\n    function filterCharacters() {\r\n        let speciesSelect = document.querySelector(\".character-spicies-select\").value;\r\n\r\n        let statusSelect = document.querySelector(\".character-status-select\").value;\r\n\r\n        let genderSelect = document.querySelector(\".character-gender-select\").value;\r\n\r\n        fetch(`https://rickandmortyapi.com/api/character/?species=${speciesSelect}&status=${statusSelect}&gender=${genderSelect}`)\r\n        .then(data => data.json())\r\n        .then(json => {\r\n            if (document.querySelector(\".card-item\")) {\r\n                let deletableItem = document.querySelectorAll(\".card-item\");\r\n                deletableItem.forEach(element => {\r\n                    element.parentNode.removeChild(element)\r\n                })\r\n            };\r\n\r\n            let characterStr = document.createElement(\"div\");\r\n            characterStr.textContent = JSON.stringify(json);\r\n            characterStr.setAttribute(\"style\", \"display: none\");\r\n            document.querySelector(\"body\").append(characterStr);\r\n            let characters = JSON.parse(characterStr.textContent);\r\n\r\n            let cardsRow = document.querySelector(\".cards-row\");\r\n            let characterResults = characters.results;\r\n\r\n            if (characters.error) {\r\n                console.log(\"!!!\")\r\n                let message = document.createElement(\"h1\");\r\n                message.textContent = \"There is nothing here\";\r\n                message.classList.add(\"card-item\");\r\n                cardsRow.append(message);\r\n            } else {\r\n                for (let key in characterResults) {\r\n                    let cardItem = document.createElement(\"div\");\r\n                    cardItem.classList.add(\"card-item\");\r\n                    cardItem.setAttribute(\"key\", characterResults[key].id);\r\n    \r\n                    let cardImg = document.createElement(\"img\");\r\n                    cardImg.classList.add(\"character-img\");\r\n                    cardImg.setAttribute(\"src\", characterResults[key].image);\r\n                    cardItem.append(cardImg);\r\n    \r\n                    let cardName = document.createElement(\"h3\");\r\n                    cardName.classList.add(\"character-name\");\r\n                    cardName.textContent = `Name: ${characterResults[key].name}`;\r\n                    cardItem.append(cardName);\r\n    \r\n                    let cardSpecies = document.createElement(\"div\");\r\n                    cardSpecies.classList.add(\"character-species\");\r\n                    cardSpecies.textContent = `Species: ${characterResults[key].species}`;\r\n                    cardItem.append(cardSpecies);\r\n    \r\n                    let cardStatus = document.createElement(\"div\");\r\n                    cardStatus.classList.add(\"character-status\");\r\n                    cardStatus.textContent = `Status: ${characterResults[key].status}`;\r\n                    cardItem.append(cardStatus);\r\n    \r\n                    let cardGender = document.createElement(\"div\");\r\n                    cardGender.classList.add(\"character-gender\");\r\n                    cardGender.textContent = `Gender: ${characterResults[key].gender}`;\r\n                    cardItem.append(cardGender);\r\n    \r\n                    cardsRow.append(cardItem);\r\n\r\n                    // Pagination\r\n                    let paginationRow = document.querySelector(\".pagination-row\");\r\n\r\n                    if (document.querySelectorAll(\".page\")) {\r\n                        let deletablePages = document.querySelectorAll(\".page\");\r\n                        deletablePages.forEach(page => {\r\n                            page.parentNode.removeChild(page);\r\n                        })\r\n                    }\r\n\r\n                    for(let key = 1; key <= json.info.pages; key++) {\r\n                        let page = document.createElement(\"div\");\r\n                        page.classList.add(\"page\");\r\n                        page.textContent = key;\r\n                        paginationRow.append(page);\r\n                    };\r\n\r\n                    let pages = document.querySelectorAll(\".page\");\r\n                    \r\n                    pages.forEach((el) => {\r\n                        el.addEventListener(\"click\", function() {\r\n                            pages.forEach(page => {\r\n                                page.classList.remove(\"page-active\");\r\n                            })\r\n                            el.classList.add(\"page-active\");\r\n\r\n                            fetch(`https://rickandmortyapi.com/api/character/?page=${el.textContent}&species=${speciesSelect}&status=${statusSelect}&gender=${genderSelect}`)\r\n                            .then(data => data.json())\r\n                            .then(json => {\r\n                                if (document.querySelector(\".card-item\")) {\r\n                                    let deletableItem = document.querySelectorAll(\".card-item\");\r\n                                    deletableItem.forEach(element => {\r\n                                        element.parentNode.removeChild(element)\r\n                                    })\r\n                                };\r\n\r\n                                let characterStr = document.createElement(\"div\");\r\n                                characterStr.textContent = JSON.stringify(json);\r\n                                characterStr.setAttribute(\"style\", \"display: none\");\r\n                                document.querySelector(\"body\").append(characterStr);\r\n                                let characters = JSON.parse(characterStr.textContent);\r\n\r\n                                let cardsRow = document.querySelector(\".cards-row\");\r\n                                let characterResults = characters.results;\r\n\r\n                                for (let key in characterResults) {\r\n                                    let cardItem = document.createElement(\"div\");\r\n                                    cardItem.classList.add(\"card-item\");\r\n                                    cardItem.setAttribute(\"key\", characterResults[key].id);\r\n\r\n                                    let cardImg = document.createElement(\"img\");\r\n                                    cardImg.classList.add(\"character-img\");\r\n                                    cardImg.setAttribute(\"src\", characterResults[key].image);\r\n                                    cardItem.append(cardImg);\r\n\r\n                                    let cardName = document.createElement(\"h3\");\r\n                                    cardName.classList.add(\"character-name\");\r\n                                    cardName.textContent = `Name: ${characterResults[key].name}`;\r\n                                    cardItem.append(cardName);\r\n\r\n                                    let cardSpecies = document.createElement(\"div\");\r\n                                    cardSpecies.classList.add(\"character-species\");\r\n                                    cardSpecies.textContent = `Species: ${characterResults[key].species}`;\r\n                                    cardItem.append(cardSpecies);\r\n\r\n                                    let cardStatus = document.createElement(\"div\");\r\n                                    cardStatus.classList.add(\"character-status\");\r\n                                    cardStatus.textContent = `Status: ${characterResults[key].status}`;\r\n                                    cardItem.append(cardStatus);\r\n\r\n                                    let cardGender = document.createElement(\"div\");\r\n                                    cardGender.classList.add(\"character-gender\");\r\n                                    cardGender.textContent = `Gender: ${characterResults[key].gender}`;\r\n                                    cardItem.append(cardGender);\r\n\r\n                                    cardsRow.append(cardItem);\r\n                                }\r\n\r\n                                window.scrollTo({\r\n                                    top: 500,\r\n                                    behavior: \"smooth\",\r\n                                })\r\n                            })\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n\r\n            window.scrollTo({\r\n                top: 500,\r\n                behavior: \"smooth\",\r\n            })\r\n        })\r\n    }\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", getCharacterApi);\r\n    return (\r\n        <div className=\"frst-tab-content tab-content\">\r\n            <div className=\"frst-tab-content-overlay\">\r\n                <h2 className=\"tab-content-title\">Characters</h2>\r\n                <div className=\"tab-content-row\">\r\n\r\n\r\n                    <div className=\"filters-container\">\r\n                        <h3 className=\"filters-title\">Filters</h3>\r\n\r\n                        <div className=\"character-spicies-filter-box filter-item\">\r\n                            <span className=\"filter-title\">Spicies: </span>\r\n                            <select className=\"character-spicies-select filter-select\">\r\n                                <option></option>\r\n                                <option value=\"human\">Human</option>\r\n                                <option value=\"alien\">Alien</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"character-status-filter-box filter-item\">\r\n                            <span className=\"filter-title\">Status: </span>\r\n                            <select className=\"character-status-select filter-select\">\r\n                                <option></option>\r\n                                <option value=\"alive\">Alive</option>\r\n                                <option value=\"dead\">Dead</option>\r\n                                <option value=\"unknown\">Unknown</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"character-gender-filter-box filter-item\">\r\n                            <span className=\"filter-title\">Gender: </span>\r\n                            <select className=\"character-gender-select filter-select\">\r\n                                <option></option>\r\n                                <option value=\"male\">Male</option>\r\n                                <option value=\"female\">Female</option>\r\n                                <option value=\"genderless\">Genderless</option>\r\n                                <option value=\"unknown\">Unknown</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <Button className=\"apply-filters-btn\" onClick={filterCharacters}>APPLY FILTERS</Button>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"cards-container\">\r\n                        <div className=\"cards-row\"></div>\r\n                        <div className=\"pagination-row\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FirstTabContent;","import React from 'react';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst FourthTabContent = () => {\r\n    return (\r\n        <div className=\"frth-tab-content tab-content\">\r\n            <div className=\"frth-tab-content-overlay\">\r\n                <h2 className=\"tab-content-title\">My Watch List</h2>\r\n                <div className=\"tab-content-row\">\r\n\r\n\r\n                    <div className=\"filters-container\">\r\n                        <h3 className=\"filters-title\">Add episode to watch</h3>\r\n\r\n                        <div className=\"watchlist-episode-name-box filter-item\">\r\n                            <span className=\"filter-title\">Episode name: </span>\r\n                            <input type=\"text\" className=\"watchlist-episode-input filter-select\"></input>\r\n                        </div>\r\n\r\n                        <Button className=\"add-episode-btn\">ADD EPISODE</Button>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"watchlist-container\">\r\n                        <div className=\"watchlist-row\">\r\n                            \r\n                            <div className=\"watchlist-item\">\r\n                                <h3 className=\"watchlist-name\">Name: Rick.</h3>\r\n                                <div className=\"watchlist-info\">info: .</div>\r\n                                <div className=\"watched-checkbox\">\r\n                                    Watched: \r\n                                    <Checkbox \r\n                                    color=\"primary\"\r\n                                    className=\"watched-checkbox-input\"/>\r\n                                </div>\r\n                                <div className=\"remove-btn\">\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FourthTabContent;","import React from 'react';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst SecondTabContent = () => {\r\n\r\n    function getEpisodeApi() {\r\n        let episodeUrl = \"https://rickandmortyapi.com/api/episode\";\r\n        fetch(episodeUrl)\r\n        .then(data => data.json())\r\n        .then(json => {\r\n            let episodeStr = document.createElement(\"div\");\r\n            episodeStr.textContent = JSON.stringify(json);\r\n            episodeStr.setAttribute(\"style\", \"display: none\");\r\n            document.querySelector(\"body\").append(episodeStr);\r\n            let episodes = JSON.parse(episodeStr.textContent);\r\n\r\n            let episodesRow = document.querySelector(\".episodes-row\");\r\n            let episodeResults = episodes.results;\r\n\r\n            for (let key in episodeResults) {\r\n                let episodeItem = document.createElement(\"div\");\r\n                episodeItem.classList.add(\"episode-item\");\r\n                episodeItem.setAttribute(\"key\", episodeResults[key].id);\r\n\r\n                let episodeName = document.createElement(\"h3\");\r\n                episodeName.classList.add(\"episode-name\");\r\n                episodeName.textContent = `Episode: ${episodeResults[key].name}`;\r\n                episodeItem.append(episodeName);\r\n\r\n                let addEpisodeToList = document.createElement(\"button\");\r\n                addEpisodeToList.classList.add(\"add-episode-btn\");\r\n                addEpisodeToList.textContent = \"Add Episode to Watchlist\";\r\n                episodeItem.append(addEpisodeToList);\r\n\r\n                episodesRow.append(episodeItem);                    \r\n            }\r\n\r\n            // Pagination\r\n            let paginationRow = document.querySelector(\".episodes-pagination-row\");\r\n\r\n            for(let key = 1; key <= json.info.pages; key++) {\r\n                let page = document.createElement(\"div\");\r\n                page.classList.add(\"page\");\r\n                page.textContent = key;\r\n                paginationRow.append(page);\r\n                console.log(paginationRow)\r\n            };\r\n\r\n            let pages = document.querySelectorAll(\".page\");\r\n            \r\n            pages.forEach((el) => {\r\n                el.addEventListener(\"click\", function() {\r\n                    pages.forEach(page => {\r\n                        page.classList.remove(\"page-active\");\r\n                    })\r\n                    el.classList.add(\"page-active\");\r\n\r\n                    fetch(`https://rickandmortyapi.com/api/episode?page=${el.textContent}`)\r\n                    .then(data => data.json())\r\n                    .then(json => {\r\n\r\n                        if (document.querySelector(\".episode-item\")) {\r\n                            let deletableItem = document.querySelectorAll(\".episode-item\");\r\n                            deletableItem.forEach(element => {\r\n                                element.parentNode.removeChild(element)\r\n                            })\r\n                        };\r\n\r\n                        let episodeStr = document.createElement(\"div\");\r\n                        episodeStr.textContent = JSON.stringify(json);\r\n                        episodeStr.setAttribute(\"style\", \"display: none\");\r\n                        document.querySelector(\"body\").append(episodeStr);\r\n                        let episodes = JSON.parse(episodeStr.textContent);\r\n\r\n                        let episodesRow = document.querySelector(\".episodes-row\");\r\n                        let episodeResults = episodes.results;\r\n\r\n                        for (let key in episodeResults) {\r\n                            let episodeItem = document.createElement(\"div\");\r\n                            episodeItem.classList.add(\"episode-item\");\r\n                            episodeItem.setAttribute(\"key\", episodeResults[key].id);\r\n\r\n                            let episodeName = document.createElement(\"h3\");\r\n                            episodeName.classList.add(\"episode-name\");\r\n                            episodeName.textContent = `Episode: ${episodeResults[key].name}`;\r\n                            episodeItem.append(episodeName);\r\n\r\n                            episodesRow.append(episodeItem);\r\n                        }\r\n\r\n                        window.scrollTo({\r\n                            top: 500,\r\n                            behavior: \"smooth\",\r\n                        })\r\n                    })\r\n                })\r\n            });\r\n            \r\n        });\r\n    };\r\n\r\n    function filterEpisodes() {\r\n        let episodeSelect = document.querySelector(\".episode-name-filter\").value;\r\n\r\n        fetch(`https://rickandmortyapi.com/api/episode?name=${episodeSelect}`)\r\n        .then(data => data.json())\r\n        .then(json => {\r\n            if (document.querySelector(\".episode-item\")) {\r\n                let deletableItem = document.querySelectorAll(\".episode-item\");\r\n                deletableItem.forEach(element => {\r\n                    element.parentNode.removeChild(element)\r\n                })\r\n            };\r\n\r\n            let episodeStr = document.createElement(\"div\");\r\n            episodeStr.textContent = JSON.stringify(json);\r\n            episodeStr.setAttribute(\"style\", \"display: none\");\r\n            document.querySelector(\"body\").append(episodeStr);\r\n            let episodes = JSON.parse(episodeStr.textContent);\r\n\r\n            let episodesRow = document.querySelector(\".episodes-row\");\r\n            let episodeResults = episodes.results;\r\n\r\n            if (episodes.error) {\r\n                console.log(\"!!!\")\r\n                let message = document.createElement(\"h1\");\r\n                message.textContent = \"There is nothing here\";\r\n                message.classList.add(\"episode-item\");\r\n                episodesRow.append(message);\r\n            } else {\r\n                for (let key in episodeResults) {\r\n                    let episodeItem = document.createElement(\"div\");\r\n                    episodeItem.classList.add(\"episode-item\");\r\n                    episodeItem.setAttribute(\"key\", episodeResults[key].id);\r\n    \r\n                    let episodeName = document.createElement(\"h3\");\r\n                    episodeName.classList.add(\"episode-name\");\r\n                    episodeName.textContent = `Episode: ${episodeResults[key].name}`;\r\n                    episodeItem.append(episodeName);\r\n    \r\n                    episodesRow.append(episodeItem);\r\n\r\n                    // Pagination\r\n                    let paginationRow = document.querySelector(\".episodes-pagination-row\");\r\n\r\n                    if (document.querySelectorAll(\".page\")) {\r\n                        let deletablePages = document.querySelectorAll(\".page\");\r\n                        deletablePages.forEach(page => {\r\n                            page.parentNode.removeChild(page);\r\n                        })\r\n                    }\r\n\r\n                    for(let key = 1; key <= json.info.pages; key++) {\r\n                        let page = document.createElement(\"div\");\r\n                        page.classList.add(\"page\");\r\n                        page.textContent = key;\r\n                        paginationRow.append(page);\r\n                    };\r\n\r\n                    let pages = document.querySelectorAll(\".page\");\r\n                    \r\n                    pages.forEach((el) => {\r\n                        el.addEventListener(\"click\", function() {\r\n                            pages.forEach(page => {\r\n                                page.classList.remove(\"page-active\");\r\n                            })\r\n                            el.classList.add(\"page-active\");\r\n\r\n                            fetch(`https://rickandmortyapi.com/api/episode?page=${el.textContent}&name=${episodeSelect}`)\r\n                            .then(data => data.json())\r\n                            .then(json => {\r\n                                if (document.querySelector(\".episode-item\")) {\r\n                                    let deletableItem = document.querySelectorAll(\".episode-item\");\r\n                                    deletableItem.forEach(element => {\r\n                                        element.parentNode.removeChild(element)\r\n                                    })\r\n                                };\r\n\r\n                                let episodeStr = document.createElement(\"div\");\r\n                                episodeStr.textContent = JSON.stringify(json);\r\n                                episodeStr.setAttribute(\"style\", \"display: none\");\r\n                                document.querySelector(\"body\").append(episodeStr);\r\n                                let episodes = JSON.parse(episodeStr.textContent);\r\n\r\n                                let episodeRow = document.querySelector(\".episodes-row\");\r\n                                let episodeResults = episodes.results;\r\n\r\n                                for (let key in episodeResults) {\r\n                                    let episodeItem = document.createElement(\"div\");\r\n                                    episodeItem.classList.add(\"episode-item\");\r\n                                    episodeItem.setAttribute(\"key\", episodeResults[key].id);\r\n\r\n                                    let episodeName = document.createElement(\"h3\");\r\n                                    episodeName.classList.add(\"episode-name\");\r\n                                    episodeName.textContent = `Episode: ${episodeResults[key].name}`;\r\n                                    episodeItem.append(episodeName);\r\n\r\n                                    episodesRow.append(episodeItem);\r\n                                }\r\n\r\n                                window.scrollTo({\r\n                                    top: 500,\r\n                                    behavior: \"smooth\",\r\n                                })\r\n                            })\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n\r\n            window.scrollTo({\r\n                top: 500,\r\n                behavior: \"smooth\",\r\n            })\r\n        })\r\n    }\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", getEpisodeApi);\r\n\r\n    return (\r\n        <div className=\"scnd-tab-content tab-content\">\r\n            <div className=\"scnd-tab-content-overlay\">\r\n                <h2 className=\"tab-content-title\">Episodes</h2>\r\n                <div className=\"tab-content-row\">\r\n\r\n\r\n                    <div className=\"filters-container\">\r\n                        <h3 className=\"filters-title\">Filters</h3>\r\n\r\n                        <div className=\"episode-name-filter-box filter-item\">\r\n                            <span className=\"filter-title\">Name: </span>\r\n                            <input type=\"text\" className=\"episode-name-filter filter-select\"></input>\r\n                        </div>\r\n\r\n                        <Button className=\"apply-filters-btn\" onClick={filterEpisodes}>APPLY FILTERS</Button>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"episodes-container\">\r\n                        <div className=\"episodes-row\"></div>\r\n                        <div className=\"episodes-pagination-row\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondTabContent;","import React from 'react';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst ThirdTabContent = () => {\r\n\r\n    function getLocationApi() {\r\n        let locationUrl = \"https://rickandmortyapi.com/api/location\";\r\n        fetch(locationUrl)\r\n        .then(data => data.json())\r\n        .then(json => {\r\n            let locationStr = document.createElement(\"div\");\r\n            locationStr.textContent = JSON.stringify(json);\r\n            locationStr.setAttribute(\"style\", \"display: none\");\r\n            document.querySelector(\"body\").append(locationStr);\r\n            let locations = JSON.parse(locationStr.textContent);\r\n\r\n            let locationsRow = document.querySelector(\".locations-row\");\r\n            let locationResults = locations.results;\r\n\r\n            for (let key in locationResults) {\r\n                let locationItem = document.createElement(\"div\");\r\n                locationItem.classList.add(\"location-item\");\r\n                locationItem.setAttribute(\"key\", locationResults[key].id);\r\n\r\n                let locationName = document.createElement(\"h3\");\r\n                locationName.classList.add(\"location-name\");\r\n                locationName.textContent = `Name: ${locationResults[key].name}`;\r\n                locationItem.append(locationName);\r\n\r\n                let locationType = document.createElement(\"div\");\r\n                locationType.classList.add(\"location-type\");\r\n                locationType.textContent = `Type: ${locationResults[key].type}`;\r\n                locationItem.append(locationType);\r\n\r\n                let locationDimension = document.createElement(\"div\");\r\n                locationDimension.classList.add(\"location-dimension\");\r\n                locationDimension.textContent = `Dimension: ${locationResults[key].dimension}`;\r\n                locationItem.append(locationDimension);\r\n\r\n                locationsRow.append(locationItem);\r\n            }\r\n\r\n            // Pagination\r\n            let paginationRow = document.querySelector(\".locations-pagination-row\");\r\n\r\n            for(let key = 1; key <= json.info.pages; key++) {\r\n                let page = document.createElement(\"div\");\r\n                page.classList.add(\"page\");\r\n                page.textContent = key;\r\n                paginationRow.append(page);\r\n            };\r\n\r\n            let pages = document.querySelectorAll(\".page\");\r\n            \r\n            pages.forEach((el) => {\r\n                el.addEventListener(\"click\", function() {\r\n                    pages.forEach(page => {\r\n                        page.classList.remove(\"page-active\");\r\n                    })\r\n                    el.classList.add(\"page-active\");\r\n\r\n                    fetch(`https://rickandmortyapi.com/api/location/?page=${el.textContent}`)\r\n                    .then(data => data.json())\r\n                    .then(json => {\r\n\r\n                        if (document.querySelector(\".location-item\")) {\r\n                            let deletableItem = document.querySelectorAll(\".location-item\");\r\n                            deletableItem.forEach(element => {\r\n                                element.parentNode.removeChild(element)\r\n                            })\r\n                        };\r\n\r\n                        let locationStr = document.createElement(\"div\");\r\n                        locationStr.textContent = JSON.stringify(json);\r\n                        locationStr.setAttribute(\"style\", \"display: none\");\r\n                        document.querySelector(\"body\").append(locationStr);\r\n                        let locations = JSON.parse(locationStr.textContent);\r\n\r\n                        let locationsRow = document.querySelector(\".locations-row\");\r\n                        let locationResults = locations.results;\r\n\r\n                        for (let key in locationResults) {\r\n                            let locationItem = document.createElement(\"div\");\r\n                            locationItem.classList.add(\"location-item\");\r\n                            locationItem.setAttribute(\"key\", locationResults[key].id);\r\n\r\n                            let locationName = document.createElement(\"h3\");\r\n                            locationName.classList.add(\"location-name\");\r\n                            locationName.textContent = `Name: ${locationResults[key].name}`;\r\n                            locationItem.append(locationName);\r\n\r\n                            let locationType = document.createElement(\"div\");\r\n                            locationType.classList.add(\"location-type\");\r\n                            locationType.textContent = `Type: ${locationResults[key].type}`;\r\n                            locationItem.append(locationType);\r\n\r\n                            let locationDimension = document.createElement(\"div\");\r\n                            locationDimension.classList.add(\"location-dimension\");\r\n                            locationDimension.textContent = `Dimension: ${locationResults[key].dimension}`;\r\n                            locationItem.append(locationDimension);\r\n\r\n                            locationsRow.append(locationItem);\r\n                        }\r\n\r\n                        window.scrollTo({\r\n                            top: 500,\r\n                            behavior: \"smooth\",\r\n                        })\r\n                    })\r\n                })\r\n            });\r\n            \r\n        });\r\n    };\r\n\r\n    function filterLocations() {\r\n        let nameSelect = document.querySelector(\".location-name-filter\").value;\r\n\r\n        let typeSelect = document.querySelector(\".location-type-filter\").value;\r\n\r\n        let dimensionSelect = document.querySelector(\".location-dimension-filter\").value;\r\n\r\n        fetch(`https://rickandmortyapi.com/api/location/?name=${nameSelect}&type=${typeSelect}&dimension=${dimensionSelect}`)\r\n        .then(data => data.json())\r\n        .then(json => {\r\n            if (document.querySelector(\".location-item\")) {\r\n                let deletableItem = document.querySelectorAll(\".location-item\");\r\n                deletableItem.forEach(element => {\r\n                    element.parentNode.removeChild(element)\r\n                })\r\n            };\r\n\r\n            let locationStr = document.createElement(\"div\");\r\n            locationStr.textContent = JSON.stringify(json);\r\n            locationStr.setAttribute(\"style\", \"display: none\");\r\n            document.querySelector(\"body\").append(locationStr);\r\n            let locations = JSON.parse(locationStr.textContent);\r\n\r\n            let locationsRow = document.querySelector(\".locations-row\");\r\n            let locationResults = locations.results;\r\n\r\n            if (locations.error) {\r\n                console.log(\"!!!\")\r\n                let message = document.createElement(\"h1\");\r\n                message.textContent = \"There is nothing here\";\r\n                message.classList.add(\"location-item\");\r\n                locationsRow.append(message);\r\n            } else {\r\n                for (let key in locationResults) {\r\n                    let locationItem = document.createElement(\"div\");\r\n                    locationItem.classList.add(\"location-item\");\r\n                    locationItem.setAttribute(\"key\", locationResults[key].id);\r\n\r\n                    let locationName = document.createElement(\"h3\");\r\n                    locationName.classList.add(\"location-name\");\r\n                    locationName.textContent = `Name: ${locationResults[key].name}`;\r\n                    locationItem.append(locationName);\r\n\r\n                    let locationType = document.createElement(\"div\");\r\n                    locationType.classList.add(\"location-type\");\r\n                    locationType.textContent = `Type: ${locationResults[key].type}`;\r\n                    locationItem.append(locationType);\r\n\r\n                    let locationDimension = document.createElement(\"div\");\r\n                    locationDimension.classList.add(\"location-dimension\");\r\n                    locationDimension.textContent = `Dimension: ${locationResults[key].dimension}`;\r\n                    locationItem.append(locationDimension);\r\n\r\n                    locationsRow.append(locationItem);\r\n\r\n                    // Pagination\r\n                    let paginationRow = document.querySelector(\".locations-pagination-row\");\r\n\r\n                    if (document.querySelectorAll(\".page\")) {\r\n                        let deletablePages = document.querySelectorAll(\".page\");\r\n                        deletablePages.forEach(page => {\r\n                            page.parentNode.removeChild(page);\r\n                        })\r\n                    }\r\n\r\n                    for(let key = 1; key <= json.info.pages; key++) {\r\n                        let page = document.createElement(\"div\");\r\n                        page.classList.add(\"page\");\r\n                        page.textContent = key;\r\n                        paginationRow.append(page);\r\n                    };\r\n\r\n                    let pages = document.querySelectorAll(\".page\");\r\n                    \r\n                    pages.forEach((el) => {\r\n                        el.addEventListener(\"click\", function() {\r\n                            pages.forEach(page => {\r\n                                page.classList.remove(\"page-active\");\r\n                            })\r\n                            el.classList.add(\"page-active\");\r\n\r\n                            fetch(`https://rickandmortyapi.com/api/location/?page=${el.textContent}&name=${nameSelect}&type=${typeSelect}&dimension=${dimensionSelect}`)\r\n                            .then(data => data.json())\r\n                            .then(json => {\r\n                                if (document.querySelector(\".location-item\")) {\r\n                                    let deletableItem = document.querySelectorAll(\".location-item\");\r\n                                    deletableItem.forEach(element => {\r\n                                        element.parentNode.removeChild(element)\r\n                                    })\r\n                                };\r\n\r\n                                let locationStr = document.createElement(\"div\");\r\n                                locationStr.textContent = JSON.stringify(json);\r\n                                locationStr.setAttribute(\"style\", \"display: none\");\r\n                                document.querySelector(\"body\").append(locationStr);\r\n                                let locations = JSON.parse(locationStr.textContent);\r\n\r\n                                let locationsRow = document.querySelector(\".locations-row\");\r\n                                let locationResults = locations.results;\r\n\r\n                                for (let key in locationResults) {\r\n                                    let locationItem = document.createElement(\"div\");\r\n                                    locationItem.classList.add(\"location-item\");\r\n                                    locationItem.setAttribute(\"key\", locationResults[key].id);\r\n\r\n                                    let locationName = document.createElement(\"h3\");\r\n                                    locationName.classList.add(\"location-name\");\r\n                                    locationName.textContent = `Name: ${locationResults[key].name}`;\r\n                                    locationItem.append(locationName);\r\n\r\n                                    let locationType = document.createElement(\"div\");\r\n                                    locationType.classList.add(\"location-type\");\r\n                                    locationType.textContent = `Type: ${locationResults[key].type}`;\r\n                                    locationItem.append(locationType);\r\n\r\n                                    let locationDimension = document.createElement(\"div\");\r\n                                    locationDimension.classList.add(\"location-dimension\");\r\n                                    locationDimension.textContent = `Dimension: ${locationResults[key].dimension}`;\r\n                                    locationItem.append(locationDimension);\r\n\r\n                                    locationsRow.append(locationItem);\r\n                                }\r\n\r\n                                window.scrollTo({\r\n                                    top: 500,\r\n                                    behavior: \"smooth\",\r\n                                })\r\n                            })\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n\r\n            window.scrollTo({\r\n                top: 500,\r\n                behavior: \"smooth\",\r\n            })\r\n        })\r\n    }\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", getLocationApi);\r\n\r\n    return (\r\n        <div className=\"thrd-tab-content tab-content\">\r\n            <div className=\"thrd-tab-content-overlay\">\r\n                <h2 className=\"tab-content-title\">Locations</h2>\r\n                <div className=\"tab-content-row\">\r\n\r\n\r\n                    <div className=\"filters-container\">\r\n                        <h3 className=\"filters-title\">Filters</h3>\r\n\r\n                        <div className=\"location-name-filter-box filter-item\">\r\n                            <span className=\"filter-title\">Name: </span>\r\n                            <input type=\"text\" className=\"location-name-filter filter-select\"></input>\r\n                        </div>\r\n\r\n                        <div className=\"location-type-filter-box filter-item\">\r\n                            <span className=\"filter-title\">Type: </span>\r\n                            <input type=\"text\" className=\"location-type-filter filter-select\"></input>\r\n                        </div>\r\n\r\n                        <div className=\"location-dimension-filter-box filter-item\">\r\n                            <span className=\"filter-title\">Dimension: </span>\r\n                            <input type=\"text\" className=\"location-dimension-filter filter-select\"></input>\r\n                        </div>\r\n\r\n                        <Button className=\"apply-filters-btn\" onClick={filterLocations}>APPLY FILTERS</Button>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"locations-container\">\r\n                        <div className=\"locations-row\"></div>\r\n                        <div className=\"locations-pagination-row\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThirdTabContent;","import React from 'react';\r\n\r\nimport FirstTabContent from './TabsContent/FirstTabContent';\r\nimport FourthTabContent from './TabsContent/FourthTabContent';\r\nimport SecondTabContent from './TabsContent/SecondTabContent';\r\nimport ThirdTabContent from './TabsContent/ThirdTabContent';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className=\"main-container\" id=\"main-c\">\r\n            <FirstTabContent/>\r\n            <SecondTabContent/>\r\n            <ThirdTabContent/>\r\n            <FourthTabContent/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport Cover from './Cover/Cover';\n\nimport Header from './Header/Header';\nimport Main from './Main/Main';\n\nconst App = () => {\n\n  function showThisTabContent(i) {\n    let tabs = document.querySelectorAll(\".tab\");\n    let mobileTabs = document.querySelectorAll(\".mobile-tab\");\n    let tabContent = document.querySelectorAll(\".tab-content\");\n    let bgColors = [\n     \"rgba(0, 50, 25, 0.8)\",\n     \"rgba(0, 25, 50, 0.8)\",\n     \"rgba(131, 0, 115, 0.8)\",\n     \"rgb(30, 0, 0, 0.8)\"\n    ];\n    let colors = [\n      \"#69c8ecff\",\n      \"rgb(175, 255, 75)\",\n      \"#fafd7cff\",\n      \"#e89242ff\"\n    ]\n\n    tabContent.forEach(page => {\n        page.classList.remove(\"tab-content-active\");\n    });\n    mobileTabs.forEach(tab => {\n      tab.classList.remove(\"tab-active\");\n      tab.removeAttribute(\"style\");\n    });\n    tabs.forEach(tab => {\n      tab.classList.remove(\"tab-active\");\n      tab.removeAttribute(\"style\");\n    });\n\n    tabContent[i].classList.add(\"tab-content-active\");\n    mobileTabs[i].classList.add(\"tab-active\");\n    tabs[i].classList.add(\"tab-active\");\n    tabs[i].setAttribute(\"style\", `background-color: ${bgColors[i]}; color: ${colors[i]};\n    border-bottom: 3px solid ${colors[i]};`);\n\n    window.scrollTo({\n        top: 500,\n        behavior: \"smooth\"\n    });\n  }\n\n  return (\n    <div className=\"global-container\">\n      <Header\n        showThisTabContent={showThisTabContent}\n      />\n      <Cover\n        showThisTabContent={showThisTabContent}\n      />\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nimport '../src/common/style/style.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}